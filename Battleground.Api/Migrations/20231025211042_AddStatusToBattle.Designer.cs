// <auto-generated />
using System;
using Battleground.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Battleground.Api.Migrations
{
    [DbContext(typeof(BattlegroundDbContext))]
    [Migration("20231025211042_AddStatusToBattle")]
    partial class AddStatusToBattle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Battleground.Repositories.Entities.Attack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BattlePokemonBattleId")
                        .HasColumnType("integer");

                    b.Property<int>("BattlePokemonId")
                        .HasColumnType("integer");

                    b.Property<string>("BattlePokemonPokemonIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("CriticalHit")
                        .HasColumnType("boolean");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("PokemonIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BattlePokemonBattleId", "BattlePokemonPokemonIdentifier");

                    b.ToTable("Attacks");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("WinnerId")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WinnerId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.BattlePlayer", b =>
                {
                    b.Property<int>("BattleId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.HasKey("BattleId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("BattlePlayers");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.BattlePokemon", b =>
                {
                    b.Property<int>("BattleId")
                        .HasColumnType("integer");

                    b.Property<string>("PokemonIdentifier")
                        .HasColumnType("text");

                    b.HasKey("BattleId", "PokemonIdentifier");

                    b.ToTable("BattlePokemons");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.PlayerInventory", b =>
                {
                    b.Property<string>("PokemonIdentifier")
                        .HasColumnType("text");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("AcquiredDate")
                        .HasColumnType("date");

                    b.HasKey("PokemonIdentifier", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerInventories");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.Attack", b =>
                {
                    b.HasOne("Battleground.Repositories.Entities.BattlePokemon", "BattlePokemon")
                        .WithMany("Attacks")
                        .HasForeignKey("BattlePokemonBattleId", "BattlePokemonPokemonIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BattlePokemon");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.Battle", b =>
                {
                    b.HasOne("Battleground.Repositories.Entities.Player", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.BattlePlayer", b =>
                {
                    b.HasOne("Battleground.Repositories.Entities.Battle", "Battle")
                        .WithMany("Players")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Battleground.Repositories.Entities.Player", "Player")
                        .WithMany("Battles")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.BattlePokemon", b =>
                {
                    b.HasOne("Battleground.Repositories.Entities.Battle", "Battle")
                        .WithMany("Pokemons")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.PlayerInventory", b =>
                {
                    b.HasOne("Battleground.Repositories.Entities.Player", "Player")
                        .WithMany("Inventory")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.Battle", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.BattlePokemon", b =>
                {
                    b.Navigation("Attacks");
                });

            modelBuilder.Entity("Battleground.Repositories.Entities.Player", b =>
                {
                    b.Navigation("Battles");

                    b.Navigation("Inventory");
                });
#pragma warning restore 612, 618
        }
    }
}
